[{
  "_comment": "join",


  "name": "Join Commute",
  "first": "LogOp_RightOuterJoin",
  "second": "LogOp_LeftOuterJoin",
  "description": "CommLOJN - right outer join to left outher join </br>select from A join B on A=B => select from B join A on A=B"
},{
  "name": "Join Commute",
  "first": "LogOp_Join",
  "second": "LogOp_Join",
  "description": "JoinCommute select from A join B on A=B => select from B join A on A=B"
},{
  "name": "JNtoHS",
  "first": "LogOp_Join",
  "second": "PhyOp_HashJoinx_jtInner",
  "description": "JNtoHS"
},{
  "name": "Left Outer Join to Nested Loop",
  "first": "LogOp_LeftOuterJoin",
  "second": "PhyOp_LoopsJoinx_jtLeftOuter",
  "description": "LOJNtoNL - Logical left outer join to physical nested loop left outer join"
},{
  "name": "EnforceBatch",
  "first": "PhyOp_HashJoinx_jtInner",
  "second": "PhyOp_ExecutionModeAdapter",
  "description": "EnforceBatch"
},
{
  "_comment": "group aggregation",


  "name": "GbAggToStrm",
  "first": "LogOp_GbAgg",
  "second": "PhyOp_StreamGbAgg",
  "description": "GbAggToStrm"
},
{
  "_comment": "Other",


  "name": "EnforceSort",
  "first": "PhyOp_Range",
  "second": "PhyOp_Sort",
  "description": "EnforceSort"
},{
  "name": "GetToScan",
  "first": "LogOp_Get",
  "second": "PhyOp_TableScan",
  "description": "GetToScan"
}
]
