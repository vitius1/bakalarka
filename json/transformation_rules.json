[{
  "_comment": 
  
"JOIN COMMUTE",
  
  "name": "JoinCommute",
  "first": "LogOp_Join",
  "second": "LogOp_Join",
  "description": "Select from A join B on A=B => select from B join A on A=B",
  "additional": "commute"
},{
  "name": "CommLOJN",
  "first": "LogOp_LeftOuterJoin",
  "second": "LogOp_RightOuterJoin",
  "description": "Left outer join to right outher join </br>select from A join B on A=B => select from B join A on A=B",
  "additional": "commute"
},{
  "name": "CommROJN",
  "first": "LogOp_RightOuterJoin",
  "second": "LogOp_LeftOuterJoin",
  "description": "Right outer join to left outher join </br>select from A join B on A=B => select from B join A on A=B",
  "additional": "commute"
},{
  "name": "CommLSJN",
  "first": "LogOp_LeftSemiJoin",
  "second": "LogOp_RightSemiJoin",
  "description": "Left semi join to right semi join </br>select from A join B on A=B => select from B join A on A=B",
  "additional": "commute"
},{
  "name": "CommRSJN",
  "first": "LogOp_RightSemiJoin",
  "second": "LogOp_LeftSemiJoin",
  "description": "Right semi join to left semi join </br>select from A join B on A=B => select from B join A on A=B",
  "additional": "commute"
},{
  "_comment": 
  
"JOIN Associate",
  
  "name": "JoinAssociate",
  "first": "LogOp_Join",
  "second": "LogOp_Join",
  "description": "(A join B) join C <=> A join (B join C)",
  "additional": "associate"
},










{
  "_comment": 

"LOG JOIN TO PHY",
  
  
  
  "name": "JNtoHS",
  "first": "LogOp_Join",
  "second": "PhyOp_HashJoinx_jtInner",
  "description": "Logical join to physical hash join",
  "additional": ""
},{
  "name": "JNtoSM",
  "first": "LogOp_Join",
  "second": "PhyOp_MergeJoinx_jtInner",
  "description": "Logical join to physical sort merge join",
  "additional": ""
},{
  "name": "JNtoNL",
  "first": "LogOp_Join",
  "second": "PhyOp_LoopsJoinx_jtInner",
  "description": "Logical join to physical nested loop join",
  "additional": ""
},

{
  "name": "LOJNtoHS",
  "first": "LogOp_LeftOuterJoin",
  "second": "PhyOp_HashJoinx_jtLeftOuter",
  "description": "Logical left outer join to physical hash left outer join",
  "additional": ""
},{
  "name": "LOJNtoSM",
  "first": "LogOp_LeftOuterJoin",
  "second": "PhyOp_MergeJoinx_jtLeftOuter",
  "description": "Logical left outer join to physical sort merge left outer join",
  "additional": ""
},{
  "name": "LOJNtoNL",
  "first": "LogOp_LeftOuterJoin",
  "second": "PhyOp_LoopsJoinx_jtLeftOuter",
  "description": "Logical left outer join to physical nested loop left outer join",
  "additional": ""
},

{
  "name": "ROJNtoHS",
  "first": "LogOp_RightOuterJoin",
  "second": "PhyOp_HashJoinx_jtRightOuter",
  "description": "Logical right outer join to physical hash right outer join",
  "additional": ""
},{
  "name": "ROJNtoSM",
  "first": "LogOp_RightOuterJoin",
  "second": "PhyOp_MergeJoinx_jtRightOuter",
  "description": "Logical right outer join to physical sort merge right outer join",
  "additional": ""
},{
  "name": "ROJNtoNL",
  "first": "LogOp_RightOuterJoin",
  "second": "PhyOp_LoopsJoinx_jtRightOuter",
  "description": "Logical right outer join to physical nested loop right outer join",
  "additional": ""
},

{
  "name": "LSJNtoHS",
  "first": "LogOp_LeftSemiJoin",
  "second": "PhyOp_HashJoinx_jtLeftSemi",
  "description": "Logical left semi join to physical hash left semi join",
  "additional": ""
},{
  "name": "LSJNtoSM",
  "first": "LogOp_LeftSemiJoin",
  "second": "PhyOp_MergeJoinx_jtLeftSemi",
  "description": "Logical left semi join to physical sort merge left semi join",
  "additional": ""
},{
  "name": "LSJNtoNL",
  "first": "LogOp_LeftSemiJoin",
  "second": "PhyOp_LoopsJoinx_jtLeftSemi",
  "description": "Logical left semi join to physical nested loop left semi join",
  "additional": ""
},

{
  "name": "RSJNtoHS",
  "first": "LogOp_RightSemiJoin",
  "second": "PhyOp_HashJoinx_jtRightSemi",
  "description": "Logical right semi join to physical hash right semi join",
  "additional": ""
},{
  "name": "RSJNtoSM",
  "first": "LogOp_RightSemiJoin",
  "second": "PhyOp_MergeJoinx_jtRightSemi",
  "description": "Logical right semi join to physical sort merge right semi join",
  "additional": ""
},{
  "name": "RSJNtoNL",
  "first": "LogOp_RightSemiJoin",
  "second": "PhyOp_LoopsJoinx_jtRightSemi",
  "description": "Logical right semi join to physical nested loop right semi join",
  "additional": ""
},
  
  

{
  
  "_comment": 
  
"OTHER JOIN",
  
  
  
  
  
  
  
  
  
  
  "name": "ImplRestrRemap",
  "first": "LogOp_Join",
  "second": "PhyOp_RestrRemap",
  "description": "Implement restrict remap",
  "additional": ""
},{
  "name": "ImplRestrRemap",
  "first": "LogOp_LeftOuterJoin",
  "second": "PhyOp_RestrRemap",
  "description": "Implement restrict remap",
  "additional": ""
},{
  "name": "ImplRestrRemap",
  "first": "LogOp_LeftSemiJoin",
  "second": "PhyOp_RestrRemap",
  "description": "Implement restrict remap",
  "additional": ""
},{
  "name": "ImplRestrRemap",
  "first": "LogOp_RightOuterJoin",
  "second": "PhyOp_RestrRemap",
  "description": "Implement restrict remap",
  "additional": ""
},{
  "name": "ImplRestrRemap",
  "first": "LogOp_RightSemiJoin",
  "second": "PhyOp_RestrRemap",
  "description": "Implement restrict remap",
  "additional": ""
},{
  "name": "EnforceBatch",
  "first": "LogOp_Join",
  "second": "PhyOp_ExecutionModeAdapter",
  "description": "Vynucen√≠ Batch mode",
  "additional": ""
}


,{
  
  "_comment": 
  
"GROUP AGGREGATION",
  
  
  
  
  


  "name": "GbAggToHS",
  "first": "LogOp_GbAgg",
  "second": "PhyOp_StreamGbAgg",
  "description": "Logical group aggregation to physical stream aggregation",
  "additional": ""
},{
  "name": "GbAggToHS",
  "first": "LogOp_GbAgg",
  "second": "PhyOp_HashGbAgg",
  "description": "Logical group aggregation to physical hash aggregation",
  "additional": ""
},{
  "name": "GbAggToSort",
  "first": "LogOp_GbAgg",
  "second": "PhyOp_Sort",
  "description": "Logical group aggregation to physical sort aggregation",
  "additional": ""
},{
  "name": "ImplRestrRemap",
  "first": "LogOp_GbAgg",
  "second": "PhyOp_RestrRemap",
  "description": "Implement restrict remap",
  "additional": ""
},
{
  "_comment": 
  
"OTHER",






  "name": "EnforceSort",
  "first": "LogOp_Get",
  "second": "PhyOp_Sort",
  "description": "SORT",
  "additional": ""
},{
  "name": "GetToScan",
  "first": "LogOp_Get",
  "second": "PhyOp_TableScan",
  "description": "Table scan",
  "additional": ""
},{
  "name": "GetToScan",
  "first": "LogOp_Get",
  "second": "PhyOp_Range",
  "description": "Table scan",
  "additional": ""
},{
  "name": "GetIdxToScan",
  "first": "LogOp_GetIdx",
  "second": "PhyOp_Range",
  "description": "Table scan with index",
  "additional": ""
},{
  "name": "SelectToFilter",
  "first": "LogOp_Select",
  "second": "PhyOp_Filter",
  "description": "Filter",
  "additional": ""
},{
  "name": "ProjectToComputeScalar",
  "first": "LogOp_Project",
  "second": "PhyOp_ComputeScalar",
  "description": "Logical operator project to physical operator compute Scalar",
  "additional": ""
}
]
